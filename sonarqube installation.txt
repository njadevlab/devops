SonarQube Installation And Setup In AWS EC2 Redhat Instance.
Prerequisite
AWS Acccount.
Create Redhat EC2 T2.medium Instance with 4GB RAM.
Create Security Group and open Required ports.
9000 ..etc
Attach Security Group to EC2 Instance.
Install java openJDK 1.8+ for SonarQube version 7.8

1. Create sonar user to manage the SonarQube server
#As a good security practice, SonarQuber Server is not advised to run sonar service as a root user, 
# create a new user called sonar and grant sudo access to manage sonar services as follows

sudo adduser sonar # do not use useradd for ubuntu, user home directory would not be created
# Grand sudo access to sonar user
sudo echo "sonar ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/sonar
# set hostname for the sonarqube server
sudo hostnamectl set-hostname sonar 
sudo su - sonar

1b. Assign password to sonar user
sudo passwd sonar

2. Enable PasswordAuthentication in the server
sudo sed -i "/^[^#]*PasswordAuthentication[[:space:]]no/c\PasswordAuthentication yes" /etc/ssh/sshd_config
sudo service sshd restart

3. Install Java JDK 1.8+ required for sonarqube to start
cd /opt
sudo apt -y install unzip wget git
sudo apt install openjdk-17-jdk

4. Download and extract the SonarqQube Server software.
sudo wget https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-7.8.zip
sudo unzip sonarqube-7.8.zip
sudo rm -rf sonarqube-7.8.zip
sudo mv sonarqube-7.8 sonarqube

5. Grant file permissions for sonar user to start and manage sonarQube
sudo chown -R sonar:sonar /opt/sonarqube/
sudo chmod -R 775 /opt/sonarqube/

6. #Create Group and User:

sudo groupadd sonarGroup

7. #Now add the user with directory access

sudo useradd -c "user to run SonarQube" -d /opt/sonarqube -g sonarGroup sonar 
sudo chown sonar:sonarGroup /opt/sonarqube -R

8. #Edit the sonar script file and set RUN_AS_USER

sudo vi /opt/sonarqube/bin/linux-x86-64/sonar.sh

9. #Add the below line at the bottom of the file 

RUN_AS_USER=sonar

10. #Create Sonar as a service(this will enable to start automatically when you restart the server)

sudo vi /etc/systemd/system/sonar.service

11. #add the below code:

[Unit]
Description=SonarQube service
After=syslog.target network.target
[Service]
Type=forking
ExecStart=/opt/sonarqube/bin/linux-x86-64/sonar.sh start
ExecStop=/opt/sonarqube/bin/linux-x86-64/sonar.sh stop
LimitNOFILE=131072
LimitNPROC=8192
User=sonar
Group=sonarGroup
Restart=always
[Install]
WantedBy=multi-user.target

12. #Save the file by entering :wq! 
13. #Kernel System changes: we must make a few modifications to a couple of kernel system limits files for sonarqube to work.

sudo vi /etc/sysctl.conf

14. #Add the following lines to the bottom of that file:

vm.max_map_count=262144
fs.file-max=65536
 
15. #Next, we're going to edit limits.conf. Open that file with the command:

sudo vi /etc/security/limits.conf

16. #At the end of this file, add the following: 

sonar   -   nofile   65536
sonar   -   nproc    4096

17. #Reload system level changes without server boot

sudo sysctl -p

18. #Start SonarQube Now

sudo systemctl start sonar
sudo systemctl enable sonar
sudo systemctl status sonar

19. #type q now to come out of this mode. Now execute the below command to see if Sonarqube is up and running. This may take a few minutes.
20. #check the Sonar logs to make sure there is no error:

tail -f /opt/sonarqube/logs/sonar*.log

#Make sure you get the below message that says sonarqube is up..
#Now to go to browser --> http://your_SonarQube_publicdns_name:9000/


